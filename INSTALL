/* 
 *
 * PMlib - Performance Monitor library
 *
 * Copyright (c) 2010-2011 VCAD System Research Program, RIKEN.
 * All rights reserved.
 *
 * Copyright (c) 2012-2014 Advanced Institute for Computational Science, RIKEN.
 * All rights reserved.
 *
 */


SOFTWARE REQUIREMENT
====================
Basic installation requires only C++ and C compilers.
For general use, it is recommended to build with the following libraries
- MPI library
- PAPI library


HOW TO COMPILE
==============

1) with configure


$ ./configure [options]
$ make
# make install


Configure options:
 
 --host=hostname
    Specify in case of cross-compilation.

 --prefix=INSTALL_DIR
    Install directory path.  If omitted, default is /usr/local/PMlib.

 --with-example=(no|yes)
    Turn on to build examples. Default setting is 'no'.
 
 --with-ompi=OPENMPI_DIR
    If the OpenMPI library is used, specify the directory path that OpenMPI library is
    installed. This option will be required to use a native compiler. Instead, if the 
    wrapper compiler, e.g., mpicxx, is used to compile, this options can be eliminated.

 --with-papi=PAPI_DIR or yes
    If you want to use the PAPI library, specify the directory where the library is installed.
    In the case of compilation on K front-end, sprcifiy the directory. Use 'yes' for when you
    compile on compute nodes.

 CXX=CXX_COMPILER
    Specify a C++ compiler, e.g., g++, icpc, xlc++ , mpicxx or others.

 CXXFLAGS=CXX_OPTIONS
    Specify C++ compiler options.

 CC==CC_COMPILER
    Specify C compiler, e.g., gcc, icc, mpicc or others.

 CFLAGS=CC_OPTIONS
    Specify C compiler options.



Some examples of configure.
More examples and detail explanation can be found in doc/How_to_use_PMlib.pdf (in Japanese only).

# Using GNU compiler with OpenMP support, without MPI or PAPI

  $ ./configure CXX=g++ CXXFLAGS="-O3 -fopenmp"

# Using Intel compiler with OpenMP support

  $ ./configure CXX=icpc CXXFLAGS="-O3 -openmp"

# Using MPI wrapper compiler, custom installation directory 

  $ ./configure --prefix=/hoge/PMlib CXX=mpicxx 

# Using MPI wrapper compiler, OpenMPI built with GNU compiler

  $ ./configure --prefix=/hoge/PMlib CXX=mpicxx \
    --with-ompi=/usr/local/openmpi/openmpi-1.6.5-gnu

# Using MPI wrapper compiler, Intel MPI, OpenMP threads enabled, assuming that
  mpicxx will find MPI library path.

  $ ./configure CXX=mpicxx CXXFLAGS="-O3 -openmp"


# Using MPI wrapper compiler (Intel) with PAPI support and examples build

  $ ./configure CXX=mpicxx CXXFLAGS="-O3 -openmp" \
                CC=mpicc CFLAGS="-O3 -openmp" \
                --with-papi=/usr/local/papi/papi-5.3.2/intel \
                --with-example=yes
  

# FX, K computer, compilation on compute nodes

  $ ./configure --prefix=hogehoge \
                --with-papi=yes \
                --with-example=yes \
                CC=mpifcc \
                CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
                CXX=mpiFCC \
                CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"



# FX, K computer, compilation on login nodes

  $ ./configure --prefix=hogehoge \
                --host=sparc64-unknown-linux-gnu \
                --with-papi=/opt/FJSVXosDevkit/sparc64fx/V01L02E07 \
                --with-example=yes \
                CC=mpifccpx \
                CFLAGS="-Kfast,parallel,openmp -Nrt_notune" \
                CXX=mpiFCCpx \
                CXXFLAGS="-Kfast,parallel,openmp -Nrt_notune"


If you try to install process again, execute 'make distclean' then configure.


2) Hand compile

Edit environmental variables in a Makefile_hand file for a target machine. Then, 'make'.   
A compiled module libPM.a will be placed in $(PM_DIR)/lib/ directory.

